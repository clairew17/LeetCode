235. Lowest Common Ancestor of a Binary Search Tree.cc

bool Cover(TreeNode* root, TreeNode* p)//if root covers node p
    {
        if(root==NULL)return false;
        if(root==p || p == NULL)return true;
        return (Cover(root->left,p) ||Cover(root->right,p)); 
    }
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL)return NULL;
        bool leftCoverP = Cover(root->left, p);
        bool leftCoverQ = Cover(root->left, q);
        bool rightCoverP = Cover(root->right, p);
        bool rightCoverQ = Cover(root->right, q);
        
        if(leftCoverP && leftCoverQ)return lowestCommonAncestor(root->left, p, q);
        if(rightCoverP && rightCoverQ)return lowestCommonAncestor(root->right, p, q);
        return root;
    }